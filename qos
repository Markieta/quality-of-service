#!/usr/bin/env bash

function pause()
{
    /usr/bin/docker stop sonarr
    /usr/bin/docker exec -it airing /usr/bin/transmission-remote -t all -S
}

function resume()
{
    /usr/bin/docker start sonarr
    /usr/bin/docker exec -it airing /usr/bin/transmission-remote -t all -s
}

function start()
{
    on=false

    declare -a hosts=(
        192.168.0.152
        192.168.0.150
        192.168.0.116
        192.168.0.115
        192.168.0.114
        192.168.0.113
        192.168.0.112
        192.168.0.111
        192.168.0.110
        192.168.0.109
        192.168.0.107
        192.168.0.100
    )

    while true; do
        hostsUp=false
        unset pids
        declare -a pids

        for i in "${hosts[@]}"; do
            ping "$i" -c 1 -w 5 >/dev/null &
            pids+=("$!")
        done

        for i in "${pids[@]}"; do
            wait "$i" && hostsUp=true && break
        done

        if ! [ "$hostsUp" = false ] ||
           /usr/bin/nmap -p 8080 192.168.0.102 192.168.0.103 192.168.0.108 | grep -qo '8080/tcp open' ||
           [ "$(/usr/bin/wget -q --user admin --password admin 192.168.0.50/DI_S_.xml -O - | grep -co '0 Active Calls')" -ne 3 ]; then
            if [ "$on" = true ]; then
                pause
                on=false
            fi

            sleep 600
        else
            sleep 5

            if [ "$on" = false ]; then
                on=true
                resume
            fi
        fi
    done
}

function stop()
{
    pause
    kill -s HUP $MAINPID
}

function restart()
{
    stop
    start
}

case "$1" in
    start|stop) "$1" ;;
    *) echo $"Usage: $0 {start|stop|restart|pause|resume}"
esac
